# Test where all tests run correctly
Success

# Test for keeping temporary files
KeepTmpFiles

# TestNameFilter, single and multiple
TestNameFilter
MultipleTests
MultipleTestsWithSpace

# Test for failures, without changing anything. View first difference
FailuresNoAction

# Test for failures, save every test with "s"
FailuresSave

# Test for overwrite mode
Overwrite

# Test for bug 1492, where overwriting several versions writes to the same file...
OverwriteDoubleVersion

# Test for testsuite filter
TestSuiteFilter

# Test for filename filter
FileNameFilter

# Test for grep filter
GrepFilter

# Test for reconnect functionality
Reconnect

# Test that reconnecting to non-found tests works
ReconnectAll

# Test we can predict and report internal errors correctly
InternalErrors

# Make sure that new-file mode applies to versions too
NewFileModeWithVersion

# Check that exceptions in one application don't crash others
AppsIndependent

# Test for test counter
CountTests

# Test that extra arguments for plugin scripts are parsed correctly
CountTestsBadArg

# Test for arguments that aren't recognised
BadArguments

# Test for applications that aren't recognised
BadApplication

# Test for checkouts that don't exist...
BadCheckout

# Some error conditions - Config module isn't there, Config module contains nonsense and config file contains bad import
NoConfig
BadConfig
ConfigBadImport

# Test we don't crash when binary is not defined
NoBinary

# Check for dashes in the TEXTTEST_HOME variable
DashesInTEXTTEST_HOME

# Make sure that we can run two tests whose names are substrings of each other...
TestNameSubstrings

# Check that -a <app>.<version> works
VersionInApp

# Sub test-suite to check that such works, and to put nasty tricks in the
# testsuite file
TestSuiteFile

# Tests that the environment is correctly read from its files
EnvironmentFile

# A collection of tests for removing run-dependent text in various bizarre forms
RunDependentText

# A collection of tests for the memory checking
MemoryTests
