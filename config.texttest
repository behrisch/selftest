# Path to the binary, at Carmen
binary:Testing/TextTest/texttest.py

# Settings for Carmen
checkout_location:~/work
default_checkout:master

# Checkout depends on the local machine, and the architecture
output:checkout
output:BadApplication
catalogue:TargetApp
errors:RENDER
errors:\.py
errors:CountTest.__del__
errors:.carmen.se:

# Might as well have nice print-outs
full_name:TextTest

# These tests cannot be run in parallel using LSF, but let's use UNIX features
# like batch mode, anyway.
config_module:carmen

log_file:output

# File comparison details. Relative paths are copied from the application
copy_test_path:TargetApp
copy_test_path:wibble.py
copy_test_path:gui_script
copy_test_path:config
create_catalogues:true

# ---------------- Values needed to run in batch mode -------------------

default_architecture:i386_linux

# To test the GUI we need this to exist
display_module:carmen

# For each "special batch" run, specify recipients, time limit, architectures and versions 
# Not present means $USER as recipient, no time limit, all versions and all architectures accepted
nightjob_recipients:carmen.matadortests
nightjob_version:master
nightjob_version:i386_linux
nightjob_version:sparc
nightjob_version:parisc_2_0
nightjob_version:powerpc
nightjob_use_collection:true

wkendjob_recipients:carmen.matadortests
wkendjob_version:master
wkendjob_version:i386_linux
wkendjob_version:sparc
wkendjob_version:parisc_2_0
wkendjob_version:powerpc
wkendjob_use_collection:true

