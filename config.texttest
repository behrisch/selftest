
##==============================================================================
##Stuff that only works at Carmen!

# Run with SGE at Carmen
config_module:carmenqueuesystem
queue_system_module:SGE

default_major_release:none
# Should be 'none' but currently
# 32-bit machines try to use the 64-bit GTK
default_architecture:x86_64_linux

queue_system_max_capacity:60

# Replace with bzr when we can!
#interactive_action_module:cvs

# ---------------- Values needed to run in batch mode at Carmen -------------------

# Machines where we can start Xvfb
virtual_display_machine:fougamou
virtual_display_machine:singleton

[batch_version]
default:std_linux
default:rundep
default:sparc
default:unix
default:powerpc
default:x86_64_solaris
default:lsf
default:sge
default:carmen
default:rhel4
# collect coverage info with local batch runs...
local:cover

[batch_recipients]
nightjob:carmen.testtool_tests

[batch_use_collection]
nightjob:true

# ---------------- Values for the static GUI -------------------

[version_priority]
powerpc:1
sparc:1
x86_64_solaris:1
carmen:2
sge:3
lsf:3
queuesystem:4
cover:5
rundep:6
[end]

[view_program]
overview*:mozilla
[end]

[gui_entry_overrides]
auto-replay_in_dynamic_gui:1
temporary_result_directory:/carm/proj/texttest/nightjob_tmp
version_to_reconnect_to:unix.std_linux
[end]

# GUI configuration, drop-down lists to appear in static gui...
[gui_entry_options]
use_checkout:/carm/proj/texttest/release/current
use_checkout:/usr/local/share/texttest
use_checkout:/carm/master/Testing/TextTest
use_checkout:/users/geoff/work/release/texttest-3.10/source/
use_checkout:/users/geoff/work/release/texttest-3.9.1/source/
checkout_to_use_for_recording:/carm/proj/texttest/release/current
checkout_to_use_for_recording:/usr/local/share/texttest
checkout_to_use_for_recording:/carm/master/Testing/TextTest
checkout_to_use_for_recording:/users/geoff/work/release/texttest-3.10/source/
checkout_to_use_for_recording:/users/geoff/work/release/texttest-3.9.1/source/
run_this_version:x86_64_solaris
run_this_version:powerpc
run_this_version:sparc
version_to_reconnect_to:unix.std_linux
version_to_reconnect_to:unix.x86_64_solaris
version_to_reconnect_to:windows
request_lsf_queue:waiting
[end]

[batch_result_repository]
nightjob:/carm/proj/texttest/html/TestStateRepository

[historical_report_location]
nightjob:/carm/documents/Development/Texttest/Texttest/TestResults
[end]

unsaveable_version:unix
unsaveable_version:std_linux

## end of stuff only for use at Carmen
## ================================================================

# Path to the executable
executable:${TEXTTEST_CHECKOUT}/bin/texttest.py

checkout_location:${TEXTTEST_HOME}/../source

[run_dependent_text]
output*:TextTest will write diagnostics
output*:{INTERNAL writedir}{REPLACE <test write dir>}
output*:[^/]*[0-9]{2}[A-Z][a-z][a-z][0-9]{6}\.[0-9]*{REPLACE <target tmp dir>}
output*:Killing.*Xvfb process{WORD -1}
output*:second to retry
output:test-case.* on .*new results.*missing results.*differences{WORD -13}
output:test-case.* on .*new results.*differences{WORD -9}
output:test-case.* on .*missing results.*differences{WORD -9}
output:test-case.* on .*new results{WORD -6}
output:test-case.* on .*missing results{WORD -6}
output:test-case.* on .*differences{WORD -5}
output:test-case.* on .*:${WORD -2}
output:creating batch report{WORD 2}
output:Killing running test{WORD -1}
# Sometimes needed under heavy machine load
output:signal 15
output:signal 9
output:Killed process{WORD 3}
output:Process had already terminated
output:sec[^ ]* on{WORD -1}
output:Sending mail from{WORD 5}
output:batch_recipients{WORD 2}
output:batch_sender{WORD 2}
output:[0-9]* and [0-9]* bytes{REPLACE <file sizes>}
outputrep*:localhost:[0-9]*.0{REPLACE localhost:<pid>.0}
targetConfig:{INTERNAL writedir}{REPLACE <test write dir>}
targetReport:{INTERNAL writedir}{REPLACE <test write dir>}
targetReport:[^ ]*@localhost{REPLACE <username>@localhost}
targetReport: on .*test-case.*under{WORD -7}
targetReport:[0-9][0-9][A-Z][a-z][a-z][0-9][0-9][0-9][0-9]{REPLACE <today's date>}
targetReport:seconds on{WORD -1}
targetReport:TESTS FAILED{WORD -2}
catalogue:.nfs
catalogue:[0-9]{2}[A-Z][a-z][a-z][0-9]{6}\.[0-9]*{REPLACE <datetime>.<pid>}
catalogue:[0-9]{2}[A-Z][a-z][a-z][0-9]{6}{REPLACE <datetime>}
catalogue:[0-9]{2}[A-Z][a-z][a-z][0-9]{4}{REPLACE <date>}
# Files that shouldn't mean anything...
catalogue:cmd
catalogue:unixperf
# Only filtered on windows
catalogue:tdat.*cmp
catalogue:hello.*cmp
catalogue:dip.*cmp
catalogue:Xvfb\..*\.[0-9]*{REPLACE Xvfb.<machine>.<pid>}
catalogues:{INTERNAL writedir}{REPLACE <test write dir>}
catalogues:[^/]*[0-9]{2}[A-Z][a-z][a-z][0-9]{6}\.[0-9]*{REPLACE <target tmp dir>}
errors:{INTERNAL writedir}{REPLACE <test write dir>}
errors:RENDER
errors:File .* line .* in
errors:CountTest.__del__
errors:TransSocketUNIX
errors:Import failed
errors:Warning: Tried to connect to session manager
# shell errors from kill
errors:root directory does not exist{WORD -1}
errors:TextTest.*requires at least{WORD 2}{REPLACE <version>}
errors:Could not start TextTest{WORD 5}{REPLACE <version>}
errors:Rejected.*special_version_for_filtering{WORD -1}
# Don't show the entire path!
dynamic_gui_log:^PATH: {WORD 2+}{REPLACE <path>}
dynamic_gui_log:{INTERNAL writedir}{REPLACE <test write dir>}
dynamic_gui_log:[^/]*[0-9]{2}[A-Z][a-z][a-z][0-9]{6}\.[0-9]*{REPLACE <target tmp dir>}
*gui_log:+ PID{WORD 3}
*gui_log:[0-9][0-9][A-Za-z][a-z][a-z][0-9][0-9]:[0-9][0-9]:[0-9][0-9]{REPLACE <date/time>}
*gui_log:-rw-rw-r--{WORD 8}{REPLACE <time>}
*gui_log:-rw-rw-r--{WORD 7}{REPLACE <day of month>}
*gui_log:-rw-rw-r--{WORD 6}{REPLACE <month>}
*gui_log:-rw-rw-r--{WORD 5}{REPLACE <size>}
dynamic_gui_log:Adding entry completion 'Marked at{WORD -2}{REPLACE <date and time>}
dynamic_gui_log:Running on{WORD -1}{REPLACE <machine>}
dynamic_gui_log:succeeded on{WORD -1}{REPLACE <machine>}
dynamic_gui_log:FAILED on{WORD -2}{REPLACE <machine>}
dynamic_gui_log:not be run on{WORD -2}{REPLACE <machine>}
dynamic_gui_log:^Reckoned to be{WORD 4+}{REPLACE <percent> complete at <date/time>}
dynamic_gui_log:at [0-3][0-9]:[0-6][0-9]{REPLACE at <time of day>}
dynamic_gui_log:From log file reckoned
dynamic_gui_log:seconds on{WORD -1}
# Unfortunately race conditions mean we can't reliably look at these
dynamic_gui_log:Temporary Files
# Traffic tests. Can't filter them there because then we can't tell when they're different...
dynamic_gui_log:The time is now{WORD 5+}{REPLACE <ASCII time>}
dynamic_gui_log:The process ID is{WORD -1}{REPLACE <pid>}
dynamic_gui_log:[^ ]*texttest\.py{REPLACE <path_to_texttest>}
dynamic_gui_log:[0-9]{2}[A-Z][a-z][a-z][0-9]{6}{REPLACE <date string>}
gui_log:{INTERNAL writedir}{REPLACE <test write dir>}
gui_log:[^/]*[0-9]{2}[A-Z][a-z][a-z][0-9]{6}\.[0-9]*{REPLACE <target tmp dir>}
gui_log:  File "
gui_log:\[Reported by.*at{WORD 3}{REPLACE <user>}
gui_log:\[Reported by.*at{WORD 5}{REPLACE <date/time>}
gui_log:Showing component versions{LINES 5}{REPLACE <version info>}
# diff output
dynamic_gui_log:1,2c1
jusecaseprops:{INTERNAL writedir}{REPLACE <test write dir>}
jusecaseprops:[^/]*[0-9]{2}[A-Z][a-z][a-z][0-9]{6}\.[0-9]*{REPLACE <target tmp dir>}
usecase:usecase filtering 3 lines{LINES 3}
traffic:{INTERNAL writedir}{REPLACE <test write dir>}
traffic:[^/]*[0-9]{2}[A-Z][a-z][a-z][0-9]{6}\.[0-9]*{REPLACE <target tmp dir>}
traffic:[^ ]*(/startXvfb.py){REPLACE <path>\1}
traffic:startXvfb.py{WORD 3}{REPLACE "<python>}
readenvironment:{INTERNAL writedir}{REPLACE <test write dir>}
readenvironment:[^/]*[0-9]{2}[A-Z][a-z][a-z][0-9]{6}\.[0-9]*{REPLACE <target tmp dir>}
rundependenttext:{INTERNAL writedir}{REPLACE <test write dir>}
rundependenttext:[^/]*[0-9]{2}[A-Z][a-z][a-z][0-9]{6}\.[0-9]*{REPLACE <target tmp dir>}
testcomparison:{INTERNAL writedir}{REPLACE <test write dir>}
testcomparison:[0-9][0-9][A-Za-z][a-z][a-z][0-9][0-9]:[0-9][0-9]:[0-9][0-9]{REPLACE at <date/time>}
testobjects:{INTERNAL writedir}{REPLACE <test write dir>}
trafficserver:{INTERNAL writedir}{REPLACE <test write dir>}
trafficserver:[^/]*[0-9]{2}[A-Z][a-z][a-z][0-9]{6}\.[0-9]*{REPLACE <target tmp dir>}
trafficserver:[0-9][0-9][A-Za-z][a-z][a-z][0-9][0-9]:[0-9][0-9]:[0-9][0-9]{REPLACE at <date/time>}
trafficserver:traffic server address{WORD -1}
[end]

[unordered_text]
# start in the background, so order can be changed
traffic:CMD:tkdiff
traffic:CMD:emacs
traffic:CMD:xterm
[end]

[failure_severity]
errors:1
*gui_log:1
target*:1
shortcut:1
targetReport:1
[end]

[failure_display_priority]
errors:1
[end]

# Force recomputation of files on non-UNIX archs
home_operating_system:posix

# Official name of the application
full_name:TextTest

# List of (generally directories) to copy from the test directory to the write directory
# because we want to write there.
partial_copy_test_path:TargetApp
partial_copy_test_path:texttesttmp
partial_copy_test_path:repository
partial_copy_test_path:personaldir

[test_data_environment]
TargetApp:TEXTTEST_HOME
texttesttmp:TEXTTEST_TMP
personaldir:TEXTTEST_PERSONAL_CONFIG
usecases:USECASE_HOME
standard:STANDARD
gtk_config:XDG_CONFIG_HOME
sge:SGE_ROOT
logging:TEXTTEST_LOGCONFIG
[end]

test_data_ignore:*pyc

link_test_path:logging
# pick a name for any config modules we might write...
link_test_path:standard
link_test_path:customconfig.py
link_test_path:Xvfb
# Put method interceptions in here
link_test_path:interceptor.py
# performance testing
link_test_path:sgehostfile
link_test_path:sge
# GTK configuration
link_test_path:gtk_config

collect_traffic:rsh
collect_traffic:interpretcore
collect_traffic:cvs
collect_traffic:which
collect_traffic:java
collect_traffic:tkdiff
collect_traffic:xterm
collect_traffic:emacs
collect_traffic:time

# Tell it that we want to track what files are created
create_catalogues:true

# Rescue any leaked Xvfb processes
catalogue_process_string:Killing Xvfb process

# Settings for creation of test cases
use_case_record_mode:GUI

# Things to collate
[collate_file]
targetMem:TargetApp/*/memory.mem*
targetReport:texttesttmp/*/batchreport*
targetConfig:TargetApp/config.*
rootTestSuite:TargetApp/testsuite.*
level1TestSuite:TargetApp/*/testsuite.*
level2TestSuite:TargetApp/*/*/testsuite.*
outputdyn:texttesttmp/*/dynamic_run1/output.log
outputdyn2:texttesttmp/*/dynamic_run2/output.log
outputdyn3:texttesttmp/*/dynamic_run3/output.log
gui_select:texttesttmp/*/dynamic_run1/gui_select
gui_select2:texttesttmp/*/dynamic_run2/gui_select
gui_select3:texttesttmp/*/dynamic_run3/gui_select
jusecaseprops:texttesttmp/*/*/jusecase.properties
symlink*:texttesttmp/*/*/*/file_edits/*/*.TEXTTEST_SYMLINK
filterfile*:TargetApp/filter_files/filter*
overview:report/*/test_[a-z]*.html
overview_all:report/*/test_*_all.html
overview_1day:report/*/test_*_18Jan2006.html
overview_1day_ver:report/*/test_*_26Jan2006*.html
overview_joint:report/test_[a-z]*.html
overview_joint_1day:report/test_*_23Jan2006.html
[end]

definition_file_stems:dynamic_usecase
definition_file_stems:reconnect_usecase
definition_file_stems:record_usecase
definition_file_stems:replay_usecase
definition_file_stems:target_record_usecase
definition_file_stems:target_input

unsaveable_version:rundep

# Don't need this at Jeppesen because it comes by default via carmenqueuesystem.py
# Windows machines don't use that configuration though and hence need this.
[bug_system_location]
bugzilla:http://bugzilla.carmen.se
[end]

# Run-dependent smaller tests
extra_version:rundep

# Run the LSF and SGE tests too...
extra_version:sge
extra_version:lsf

## ================================================================
## more stuff only for use at Carmen
extra_version:carmen

# Use the same environment as the parent TextTest
interpreter:ttpython

# Settings for Carmen
default_checkout:master
[checkout_location]
default:~/work/${TEXTTEST_CHECKOUT_NAME}/Testing/TextTest
nightjob:/carm/proj/texttest/release/current
[end]
