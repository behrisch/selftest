# This file is used by texttest.py, and specifies the binary, 
# default checkout, users, and run-dependent text etc. for APC Pairing (APC) 

# ---------------- Values required by the framework -------------------

# Python configuration module to use. The configuration "default" is always available
# Otherwise, provide any module you like that implements a getConfig(optionMap) method
config_module:apc

# Binary (relative to checkout) to be used
binary:${CARMSYS}/bin/APCbatch.sh

default_interface:console

checkout_location:/carm/proj/texttest/
default_checkout:selftest_data

# run-dependent text for each file produced
# Please add text to remove from comparison files
# separated from the file concerned by a semicolon
[run_dependent_text]
status:cpu_child
status:Date
status:library date
status:cpu time
status:Machine
status:library version
status:CARMSYS
status:APC COST ANA
status:Generation time
status:Optimization time
status:Coordination time
status:User
status:APC program
status:Network generation time
status:Costing time (sec)
status:Conn fixing time (sec)
status:OC to DH time (sec)
status:Subplan
status:CARMUSR
status:CARMTMP
all:sk_test9_user
valgrind:==.*=={WORD 0}
valgrind:--.*--{WORD 0}
valgrind:{INTERNAL writedir}{REPLACE <test write dir>}
valgrind:My PID
valgrind:Linux version{WORD 2+}
valgrind:Reading syms
valgrind:REDIR
valgrind:new:.*(index     ) 
valgrind:discard syms
valgrind:Discarding syms at
valgrind:ERROR SUMMARY:{WORD -3+}
valgrind:supp:
valgrind:malloc/free{WORD 2+}
valgrind:checked.*bytes{WORD 2}
valgrind:definitely lost{WORD 3+}
valgrind:possibly lost{WORD 3+}
valgrind:memcheck: secondaries:
valgrind:translate:
valgrind:transtab:
valgrind:tt/tc
valgrind:scheduler
valgrind:exectx
valgrind:memcheck: sanity checks:
valgrind:memcheck: SMs: 
valgrind:memcheck: max sec V bit nodes:
valgrind:memcheck: set_sec_vbits8 calls:
valgrind:memcheck: max shadow mem size:
valgrind:sanity:
valgrind:still reachable:
valgrind:$USER{REPLACE <username>}
valgrind:johani{REPLACE <username>}
[end]

# Determines file to be used for information extraction, and presentation by tkdiff instead of diff
log_file:status

# Versions which exist for environmental or other purposes and should not be offered as save options
unsaveable_version:i386_linux
unsaveable_version:master
unsaveable_version:wkendjob
unsaveable_version:sleep

extra_version:boost

discard_file:output
discard_file:errors

# Collect the solution, and some other stuff
[collate_file]
solution:APC_FILES/best_solution
status:APC_FILES/status
script_errors:APC_FILES/run_status_script_error
warnings:APC_FILES/run_status_warning
# Appearance is indeterministic, so disable for self-tests
#error:APC_FILES/run_status_error
[end]

# Collect the solution, which will be compressed
[collate_script]
solution:cat
solution:uncompress -c
[end]

# ---------------- Values required by the Carmen module -------------------

# What needs to be built by the rule compiler
rave_name:apc

# The library it should link with, need to check dates on this
rave_static_library:${CARMSYS}/data/apc/${ARCHITECTURE}/libapc.a

# The architecture that runs without a version ID. If you run on other architecture, you will
# get given version ${ARCH}$v, where $v was the version specified, if any...
default_architecture:i386_linux

# Things to build
[build_targets]
:${TEXTTEST_CHECKOUT}/Optimization/APC
deb:${TEXTTEST_CHECKOUT}/Optimization/APC_DEBUG
pic:${TEXTTEST_CHECKOUT}/Optimization/Picador
sc:${TEXTTEST_CHECKOUT}/Optimization/SCSolver
sc:${TEXTTEST_CHECKOUT}/Optimization/APC
rave:${TEXTTEST_CHECKOUT}/Rules_and_Reports
rave:${TEXTTEST_CHECKOUT}/Optimization/APC

# For each "special batch" run, specify recipients, time limit, architectures and versions 
# Not present means $USER as recipient, no time limit, all versions and all architectures accepted
[batch_recipients]
wkendjob:henrike,jorgen,fredrik,lennart,curt
default:carmen.raveopt_tests,johani

[batch_version]
default:master
default:10
default:9
default:i386_linux

[batch_result_repository]
default:repository

[historical_report_location]
default:report
[end]

# ---------------- Values used by the APC module -------------------
link_libs:-L$CARMSYS/lib/i386_linux -lxprs -lxprl -lm -ldl -L$CARMSYS/data/crc/i386_linux -lrave_rts -lrave_private -lBasics_STACK  `xml2-config --libs`

# When calculating the KPI the last costs (and times) are ignored as the cost changes
# very little while a lot of time is spentin the end of a run. Here is the margin in % that the cost
# can vary within, and still be removed 'off the tail of the curve'
#
# This is more or less obsolete now as we only KPI groups and most groups have hardcoded q and p values
# such that the margin is not used for deciding the worst cost.
#
kpi_cost_margin:0.1

# Extract logs
[extract_logs]
default:grep "Solving" apclog
subgrad:grep -E "Solving|LBD|OBJ" apclog
test:grep "OBJ" apclog
all:cat apclog

[apcinfo]
profilesDir:TargetApp/profiles
profilesDirAsHtml:http://www-oint.carmen.se/Development/Optimization/APC/profiles
[end]

cvs_log_for_files:memory,performance,error,warnings
