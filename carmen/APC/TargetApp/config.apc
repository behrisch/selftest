# This file is used by texttest.py, and specifies the binary, 
# default checkout, users, and run-dependent text etc. for APC Pairing (APC) 

# ---------------- Values required by the framework -------------------

# Python configuration module to use. The configuration "default" is always available
# Otherwise, provide any module you like that implements a getConfig(optionMap) method
config_module:apc
queue_system_module:${QUEUE_SYSTEM}

# Binary (relative to checkout) to be used
binary:${CARMSYS}/bin/APCbatch.sh

default_interface:console

checkout_location:/carm/proj/texttest/
default_checkout:selftest_data

# run-dependent text for each file produced
# Please add text to remove from comparison files
# separated from the file concerned by a semicolon
[run_dependent_text]
status:cpu_child
status:Date
status:library date
status:cpu time
status:Machine
status:library version
status:CARMSYS
status:APC COST ANA
status:Generation time
status:Optimization time
status:Coordination time
status:User
status:APC program
status:Network generation time
status:Costing time (sec)
status:Conn fixing time (sec)
status:OC to DH time (sec)
status:Subplan
status:CARMUSR
all:sk_test9_user
[end]

# Determines file to be used for information extraction, and presentation by tkdiff instead of diff
log_file:status

# Versions which exist for environmental or other purposes and should not be offered as save options
unsaveable_version:i386_linux
unsaveable_version:master

extra_version:boost

discard_file:output
discard_file:errors

# Collect the solution, and some other stuff
[collate_file]
solution:APC_FILES/best_solution
status:APC_FILES/status
script_errors:APC_FILES/run_status_script_error
warnings:APC_FILES/run_status_warning
error:APC_FILES/run_status_error
[end]

# ---------------- Values required by the performance module -------------------

# String to look for to check for memory
[performance_logfile_extractor]
memory:memory:

# Performance machines/groups. Performance is only compared if these machines are used for test execution
[performance_test_resource]
cputime:model=Opteron250

# How much variation in performance do we allow, in percentage of total runtime? 
[performance_variation_%]
cputime:20
memory:5

# How long (in seconds) must a test be before performance comparison is used?
[performance_test_minimum]
cputime:5
memory:15
[end]

# ---------------- Values required by the Carmen module -------------------

# What needs to be built by the rule compiler
rave_name:apc

# The library it should link with, need to check dates on this
rave_static_library:${CARMSYS}/data/apc/${ARCHITECTURE}/libapc.a

# The architecture that runs without a version ID. If you run on other architecture, you will
# get given version ${ARCH}$v, where $v was the version specified, if any...
default_architecture:i386_linux

# Things to build
[build_targets]
:${TEXTTEST_CHECKOUT}/Optimization/APC
sc:${TEXTTEST_CHECKOUT}/Optimization/SCSolver
sc:${TEXTTEST_CHECKOUT}/Optimization/APC
rave:${TEXTTEST_CHECKOUT}/Rules_and_Reports
rave:${TEXTTEST_CHECKOUT}/Optimization/APC

# For each "special batch" run, specify recipients, time limit, architectures and versions 
# Not present means $USER as recipient, no time limit, all versions and all architectures accepted
[batch_recipients]
nightjob:carmen.raveopt_tests,johani
wkendjob:carmen.raveopt_tests,henrike,jorgen,fredrik,johani,lennart,curt,rastjo
default:$USER

[batch_version]
default:master
default:10
default:9
default:i386_linux

[batch_timelimit]
default:90

[batch_result_repository]
default:repository

[historical_report_location]
default:report
[end]

# ---------------- Values used by the APC module -------------------
link_libs:-L$CARMSYS/lib/i386_linux -lxprs -lxprl -lm -ldl -L$CARMSYS/data/crc/i386_linux -lrave_rts -lrave_private -lBasics_STACK  `xml2-config --libs`

# When calculating the KPI the last costs (and times) are ignored as the cost changes
# very little while a lot of time is spentin the end of a run. Here is the margin in % that the cost
# can vary within, and still be removed 'off the tail of the curve'
#
# This is more or less obsolete now as we only KPI groups and most groups have hardcoded q and p values
# such that the margin is not used for deciding the worst cost.
#
kpi_cost_margin:0.1

# Extract logs
[extract_logs]
default:grep "Solving" apclog
subgrad:grep -E "Solving|LBD|OBJ" apclog
test:grep "OBJ" apclog
all:cat apclog

[apcinfo]
profilesDir:TargetApp/profiles
profilesDirAsHtml:http://www-oint.carmen.se/Development/Optimization/APC/profiles
[end]

cvs_log_for_files:memory,performance,error,warnings
