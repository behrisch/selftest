<?xml version="1.0"?>
<RaveProgram><Module name="_topmodule"><Definition name="min_connection_time_rule"><Position file="source/Ruleset_8" row="82"/><Remark role="brief" text="Minimum allowed connection time"/><Rule><Dependency level="_topmodule.trip"/><Range level="_topmodule.trip" backward="0" forward="1" parentLevel="_topmodule.roster"/></Rule></Definition><Definition name="max_block_time"><Position file="source/Ruleset_8" row="87"/><Remark role="brief" text="Maximum block time allowed in the roster"/><Rule><Dependency level="_topmodule.roster"/><Range level="_topmodule.roster" backward="0" forward="0" parentLevel="_topmodule.roster"/></Rule></Definition><Definition name="%crew_table_name%"><Position file="require/crew_data" row="9"/><Remark role="brief" text="Crew table name"/><Variable type="String"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="NEW_CREW"/></Variable></Definition><Definition name="%sc_treat_ap_as_ah%"><Position file="require/crew_position" row="13"/><Remark role="brief" text="Treat AP as AH (if AP doesn't mean extra qualification)"/><Variable type="Bool"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="TRUE"/></Variable></Definition></Module><Module name="_builtin"><Definition name="flight_number"><Remark role="planner" text="IATA standard flight number"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival"><Remark role="planner" text="Arrival time UTC"/><Keyword type="Abstime"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="departure"><Remark role="planner" text="Departure time UTC"/><Keyword type="Abstime"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="activity_type"><Remark role="planner" text="Is always LEG for flights. For ground activities it is flight_name."/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival_airport_name"><Remark role="planner" text="IATA code of arrival airport (3 letters)"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="local_arrival_time_summer"><Remark role="planner" text="Arrival time LT at arrival airport (adjustment is made for daylight saving time)"/><Keyword type="Abstime"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="local_departure_time_summer"><Remark role="planner" text="Departure time LT at departure airport (adjustment is made for daylight saving time)"/><Keyword type="Abstime"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="flight_suffix"><Remark role="planner" text="The operational suffix for the flight (1 letter). The meaning and use of the suffix is defined by the administrating carrier. VOID is returned for non flight duties"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="departure_airport_name"><Remark role="planner" text="IATA code of departure airport (3 letters)"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="departure_airport_country"><Remark role="planner" text="IATA code of departure country (2 letters)"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival_airport_country"><Remark role="planner" text="IATA code of arrival country (2 letters)"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival_latitude"><Remark role="planner" text="Latitude of arrival airport in minutes (positive=N)"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="departure_latitude"><Remark role="planner" text="Latitude of departure airport in minutes (positive=N)"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival_longitude"><Remark role="planner" text="Longitude of arrival airport in minutes (positive=E)"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="departure_longitude"><Remark role="planner" text="Longitude of departure airport in minutes (positive=E)"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="apc_cas_is_active"><Remark role="planner" text="TRUE when APC is running a crew assignment job."/><Keyword type="Bool"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="apc_pac_is_active"><Remark role="planner" text="TRUE when APC is running a pairing job."/><Keyword type="Bool"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="apc_cas_shift_improve_loop"><Remark role="planner" text="Number of shift improve loop currently being executed."/><Keyword type="Int"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="shift_improve_sweep_number"><Remark role="planner" text="Number of shift improve sweep currently being executed."/><Keyword type="Int"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="shift_improve_solution_number"><Remark role="planner" text="Number of shift improve solution currently being created."/><Keyword type="Int"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="preassigned_activity"><Remark role="planner" text="True if the activity is preassigned, i.e. locked to crew member or part of the environment"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="environment_activity"><Remark role="planner" text="True if the activity is part of the environment"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="crr_crew_id"><Remark role="planner" text="Crew id for assigned CRR"/><Keyword type="String"><Dependency level="_topmodule.roster"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="trip_id"><Remark role="planner" text="Uniq trip id"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="flight_duty"><Remark role="planner" text="True if the activity is a flight duty"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="ground_duty"><Remark role="planner" text="True for all ground activities and personal on duties"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="ground_duty_code"><Remark role="planner" text="Returns the duty code if the activity is a ground duty. Otherwise VOID is returned"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="ground_duty_main_code"><Remark role="planner" text="AF. Returns the duty main code if the activity is a ground duty. Otherwise VOID is returned"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="ground_duty_code_suffix"><Remark role="planner" text="Returns the one letter suffix of a ground task code. If the activity is not a ground duty VOID is returned"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="leg_number"><Remark role="planner" text="The leg sequence number"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="homebase"><Remark role="planner" text="Planned homebase for current chain of legs (should not be used in crew assignment)"/><Keyword type="String"><Dependency level="_topmodule.roster"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="trip_homebase"><Remark role="planner" text="Planned homebase for current trip (preferable to homebase in Crew Assignment)"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="homebase_departure"><Remark role="planner" text="Departure time in local homebase time (NO daylight saving time)"/><Keyword type="Abstime"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="homebase_arrival"><Remark role="planner" text="Arrival time in local homebase time (NO daylight saving time)"/><Keyword type="Abstime"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="homebase_departure_summer"><Remark role="planner" text="Departure time in local homebase time (daylight saving time considered)"/><Keyword type="Abstime"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="homebase_arrival_summer"><Remark role="planner" text="Arrival time in local homebase time (daylight saving time considered)"/><Keyword type="Abstime"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_1"><Remark role="planner" text="Booked crew in position 1 of the leg"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_2"><Remark role="planner" text="Booked crew in position 2 of the leg"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_3"><Remark role="planner" text="Booked crew in position 3 of the leg"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_4"><Remark role="planner" text="Booked crew in position 4 of the leg"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_5"><Remark role="planner" text="Booked crew in position 5 of the leg"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_6"><Remark role="planner" text="Booked crew in position 6 of the leg"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_7"><Remark role="planner" text="Booked crew in position 7 of the leg"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_8"><Remark role="planner" text="Booked crew in position 8 of the leg"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_9"><Remark role="planner" text="Booked crew in position 9 of the leg"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_10"><Remark role="planner" text="Booked crew in position 10 of the leg"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_11"><Remark role="planner" text="Booked crew in position 11 of the leg"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_12"><Remark role="planner" text="Booked crew in position 12 of the leg"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="planning_crew_position_1"><Remark role="planner" text="Planning value of crew in subplan"/><Keyword type="Int"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_2"><Remark role="planner" text="Planning value of crew in subplan"/><Keyword type="Int"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_3"><Remark role="planner" text="Planning value of crew in subplan"/><Keyword type="Int"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_4"><Remark role="planner" text="Planning value of crew in subplan"/><Keyword type="Int"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_5"><Remark role="planner" text="Planning value of crew in subplan"/><Keyword type="Int"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_6"><Remark role="planner" text="Planning value of crew in subplan"/><Keyword type="Int"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_7"><Remark role="planner" text="Planning value of crew in subplan"/><Keyword type="Int"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_8"><Remark role="planner" text="Planning value of crew in subplan"/><Keyword type="Int"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_9"><Remark role="planner" text="Planning value of crew in subplan"/><Keyword type="Int"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_10"><Remark role="planner" text="Planning value of crew in subplan"/><Keyword type="Int"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_11"><Remark role="planner" text="Planning value of crew in subplan"/><Keyword type="Int"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_12"><Remark role="planner" text="Planning value of crew in subplan"/><Keyword type="Int"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="assigned_crew_position_1"><Remark role="planner" text="Assigned crew position 1 for this crew chain"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_2"><Remark role="planner" text="Assigned crew position 2 for this crew chain"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_3"><Remark role="planner" text="Assigned crew position 3 for this crew chain"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_4"><Remark role="planner" text="Assigned crew position 4 for this crew chain"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_5"><Remark role="planner" text="Assigned crew position 5 for this crew chain"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_6"><Remark role="planner" text="Assigned crew position 6 for this crew chain"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_7"><Remark role="planner" text="Assigned crew position 7 for this crew chain"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_8"><Remark role="planner" text="Assigned crew position 8 for this crew chain"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_9"><Remark role="planner" text="Assigned crew position 9 for this crew chain"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_10"><Remark role="planner" text="Assigned crew position 10 for this crew chain"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_11"><Remark role="planner" text="Assigned crew position 11 for this crew chain"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_12"><Remark role="planner" text="Assigned crew position 12 for this crew chain"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_function"><Remark role="planner" text="Returns the position for the assigned function. Range is 0 to 11. Returns -1 for unassigned legs"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="departure_airport_city"><Remark role="planner" text="Three-letter city code of departure city"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival_airport_city"><Remark role="planner" text="Three-letter city code of arrival city"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="departure_airport_base"><Remark role="planner" text="Base of departure airport. If departure airport is not at an active base according to the base definition table an empty string is returned"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival_airport_base"><Remark role="planner" text="Base of arrival airport. If arrival airport is not at an active base according to the base definition table an empty string is returned"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="departure_time_zone"><Remark role="planner" text="Difference between local time and UTC at departure airport (daylight saving time not considered)"/><Keyword type="Reltime"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival_time_zone"><Remark role="planner" text="Difference between local time and UTC at arrival airport (daylight saving time not considered)"/><Keyword type="Reltime"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="local_departure_time"><Remark role="planner" text="Departure time LT at departure airport (daylight saving time not considered)"/><Keyword type="Abstime"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="local_arrival_time"><Remark role="planner" text="Arrival time LT at arrival airport (daylight saving time not considered)"/><Keyword type="Abstime"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="aircraft_type"><Remark role="planner" text="IATA aircraft sub-type (3 characters)"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="aircraft_change"><Remark role="planner" text="True if the next leg in the chain does not follow the current leg in any aircraft rotation (including over night changes) - void if multiple vehicles"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="1" parentLevel="_topmodule.roster"/></Keyword></Definition><Definition name="aircraft_owner"><Remark role="planner" text="The IATA airline designator for the carrier to whose fleet the aircraft belongs"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="deadhead"><Remark role="planner" text="True if this leg is a flight_duty and the type is DEADHEAD. Also true for OAG and GROUND_TRANSPORT. Returns VOID if not a flight_duty."/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="ground_duty_sub_code"><Remark role="planner" text="Returns the sub code for a ground task code if the activity is a ground duty. Otherwise VOID is returned"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="off_duty"><Remark role="planner" text="True for all personal off duties"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="off_duty_code"><Remark role="planner" text="Returns the off duty code if the activity is an off duty. Otherwise VOID is returned"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="off_duty_sub_code"><Remark role="planner" text="Returns the off duty sub code if the activity is an off duty. Otherwise VOID is returned"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="passenger_terminal_departure_station"><Remark role="planner" text="Passenger terminal for departure station (max 2 letters)"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="flight_carrier"><Remark role="planner" text="IATA airline designator of the administrating carrier. VOID is returned for non flight duties."/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="ground_activity"><Remark role="planner" text="True if the leg is a ground activity"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="personal_activity"><Remark role="planner" text="True if the leg is a personal activity"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="ground_transport"><Remark role="planner" text="True if this leg is a ground transport"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="oag"><Remark role="planner" text="True if this leg is an OAG flight"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="service_type"><Remark role="planner" text="The IATA service type"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="crr_name"><Remark role="planner" text="Name of this CRR"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="crr_name_as_integer"><Remark role="planner" text="Name of this CRR as an integer"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="nothing_scheduled"><Remark role="planner" text="True if crew member does not have any assignments (i.e. a dummy crew chain)"/><Keyword type="Bool"><Dependency level="_topmodule.roster"/><Range level="_topmodule.roster" backward="0" forward="0" parentLevel="_topmodule.roster"/></Keyword></Definition><Definition name="shift_improve_tw_start"><Remark role="planner" text="Start of  improve time window"/><Keyword type="Abstime"><Dependency level="_topmodule.roster"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="shift_improve_tw_end"><Remark role="planner" text="End of  improve time window"/><Keyword type="Abstime"><Dependency level="_topmodule.roster"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="homebase_country"><Remark role="planner" text="Planned homebase country code (two letters)"/><Keyword type="String"><Dependency level="_topmodule.roster"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="crr_is_closed_last"><Remark role="planner" text="True if no more legs will be added to the end of the CRR. Used for avoiding illegal subchain problems."/><Keyword type="Bool"><Dependency level="_topmodule.roster"/><Range level="_topmodule.roster" backward="0" forward="0" parentLevel="_topmodule.roster"/></Keyword></Definition><Definition name="changed_assignment"><Remark role="planner" text="False if segment belonged to the previous solution for a crew member"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="changed_assignment_valid"><Remark role="planner" text="If true then the keyword changed_assignment is valid."/><Keyword type="Bool"><Dependency level="_topmodule.roster"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="is_generating"><Remark role="planner" text="True only when generating."/><Keyword type="Bool"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="connection_matrix_setup"><Remark role="planner" text="True only when evaluating RAVE expressions on connection."/><Keyword type="Bool"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="onward_ref_flight_number"><Remark role="planner" text="Flight number of the next leg operated by the same aircraft regarding to onward references from input data"/><Keyword type="Int"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="aircraft_type_custom"><Remark role="planner" text="Custom aircraft type"/><Keyword type="String"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="crr_has_base_variant"><Remark role="planner" text="True if the CRR has a base variant. In PAC APC this keyword may only be used in the PDL status report  code. In CAS APC the keyword is undefined."/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="locked_activity"><Remark role="planner" text="True if the activity is locked during  improve in APC"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="turnout_leg_arrival"><Remark role="planner" text="Arrival time of the next leg in the aircraft rotation - void if multiple vehicles"/><Keyword type="Abstime"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="turnout_leg_departure"><Remark role="planner" text="Departure time of the next leg in the aircraft rotation - void if multiple vehicles"/><Keyword type="Abstime"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_0"><Remark role="planner" text="True if {user} tag 0 is set"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_1"><Remark role="planner" text="True if {user} tag 1 is set"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_2"><Remark role="planner" text="True if {user} tag 2 is set"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_3"><Remark role="planner" text="True if {user} tag 3 is set"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_4"><Remark role="planner" text="True if {user} tag 4 is set"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_5"><Remark role="planner" text="True if {user} tag 5 is set"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_6"><Remark role="planner" text="True if {user} tag 6 is set"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_7"><Remark role="planner" text="True if {user} tag 7 is set"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_8"><Remark role="planner" text="True if {user} tag 8 is set"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_9"><Remark role="planner" text="True if {user} tag 9 is set"/><Keyword type="Bool"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="lp_period_start"><Remark role="planner" text="Validity period for local plan (i.e. period for loaded flight data). Start date."/><Keyword type="Abstime"><Dependency level="_topmodule.roster"/><Range level="_topmodule.roster" backward="0" forward="0" parentLevel="_topmodule.roster"/></Keyword></Definition><Definition name="lp_period_end"><Remark role="planner" text="Validity period for local plan. End date."/><Keyword type="Abstime"><Dependency level="_topmodule.roster"/><Range level="_topmodule.roster" backward="0" forward="0" parentLevel="_topmodule.roster"/></Keyword></Definition><Definition name="times"><Remark role="planner" text="The iteration will be repeated N times. The active count is available with the function times_index(K) where K is in the range [0 - number of times iterations used]."/><Iterator/></Definition><Definition name="above"><Remark role="planner" text="Returns the iteration group N steps above the current group."/><Iterator/></Definition><Definition name="actual_chain_period"><Remark role="planner" text="Frequency and period iterator. Each partition represents a period with chains having a specific frequency. No periods overlap."/><Iterator/></Definition><Definition name="actual_leg_period"><Remark role="planner" text="Frequency and period iterator. Each partition represents a period with legs having a specific frequency. No periods overlap."/><Iterator/></Definition></Module><Module name="matador"><Definition name="%________crew_rostering_optimizer_parameters____%"><Position file="modules/matador" row="16"/><Remark role="brief" text="#HEADER#CREW ROSTERING OPTIMIZER parameters"/><Variable type="String"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="________"/></Variable></Definition><Definition name="%___roster_initial_parameters___%"><Position file="modules/matador" row="23"/><Remark role="brief" text="#HEADER# ROSTER INITIAL parameters"/><Variable type="String"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="________"/></Variable></Definition><Definition name="%___shift_improve_parameters___%"><Position file="modules/matador" row="31"/><Remark role="brief" text="#HEADER# SHIFT IMPROVE parameters"/><Variable type="String"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="________"/></Variable></Definition><Definition name="%___generation_parameters___%"><Position file="modules/matador" row="43"/><Remark role="brief" text="#HEADER# GENERATION parameters"/><Variable type="String"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="________"/></Variable></Definition><Definition name="%___advanced_parameters___%"><Position file="modules/matador" row="65"/><Remark role="brief" text="#HEADER# ADVANCED parameters"/><Variable type="String"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="________"/></Variable></Definition><Definition name="%___fly_below_rank____%"><Position file="modules/matador" row="90"/><Remark role="brief" text="#HEADER#Fly Below Rank"/><Variable type="String"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="________"/></Variable></Definition><Definition name="%___buddy_bids____%"><Position file="modules/matador" row="101"/><Remark role="brief" text="#HEADER#Buddy Bids"/><Variable type="String"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="________"/></Variable></Definition></Module><Module name="quals"/></RaveProgram>
