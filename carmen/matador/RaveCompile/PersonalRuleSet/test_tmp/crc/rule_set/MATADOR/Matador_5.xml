<?xml version="1.0"?>
<RaveProgram><Module name="_topmodule"><Definition name="%crew_table_name%"><Position file="require/crew_data" row="9"/><Remark role="brief"><P>Crew table name</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="NEW_CREW"/></Variable></Definition><Definition name="%sc_treat_ap_as_ah%"><Position file="require/crew_position" row="13"/><Remark role="brief"><P>Treat AP as AH (if AP doesn't mean extra qualification)</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="TRUE"/></Variable></Definition><Definition name="min_connection_time_rule"><Position file="source/Matador_5" row="64"/><Remark role="brief"><P>Minimum allowed connection time</P></Remark><Rule><Dependency level="_topmodule.trip"/><Range level="_topmodule.trip" backward="0" forward="1" parentLevel="_topmodule.roster"/></Rule></Definition><Definition name="max_block_time"><Position file="source/Matador_5" row="69"/><Remark role="brief"><P>Maximum block time allowed in the roster</P></Remark><Rule><Dependency level="_topmodule.roster"/><Range level="_topmodule.roster" backward="0" forward="0" parentLevel="_topmodule.roster"/></Rule></Definition></Module><Module name="_builtin"><Definition name="user_tag_9"><Remark role="planner"><P>True if {user} tag 9 is set</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="line_crew_position"><Remark role="planner"><P>Argument: Int position</P><P>The crew complement value for the given position of the line.</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword><Argument name="position" type="Int"/></Definition><Definition name="trip_booked_crew_position"><Remark role="planner"><P>Argument: Int position</P><P>The booked crew for the given position for the trip</P><P>Source: data/internal</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword><Argument name="position" type="Int"/></Definition><Definition name="oag"><Remark role="planner"><P>True if this leg is an OAG flight</P><P>Source: data/internal</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="ground_transport"><Remark role="planner"><P>True if this leg is a ground transport</P><P>Source: data/internal</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="deadhead"><Remark role="planner"><P>True if this leg is a flight_duty and the type is DEADHEAD. Also true for OAG and GROUND_TRANSPORT. Returns VOID if not a flight_duty.</P><P>Source: data/internal</P><P/></Remark><Keyword type="Bool" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="service_type"><Remark role="planner"><P>The IATA service type</P><P>Source: data/SSIM</P><P/></Remark><Keyword type="String" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="activity_type"><Remark role="planner"><P>Is always LEG for flights. For ground activities it is flight_name.</P><P>Source: data/internal</P><P/></Remark><Keyword type="String" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="aircraft_type_custom"><Remark role="planner"><P>Customer specific aircraft sub-type</P><P>Source: data/internal</P><P/></Remark><Keyword type="String" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="duty_type"><Remark role="planner"><P>The duty type of the leg in the current chain</P><P>Source: data/internal</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="crr_is_closed_first"><Remark role="planner"><P>True if no more legs will be added to the beginning of the trip. Used for avoiding illegal subchain problems.</P><P>Source: data/internal</P><P/><P>   Comment: Warning: should be avoided or at least  used with utmost care when modelling for Colgen</P><P>   </P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.roster"/><Range level="_topmodule.roster" backward="0" forward="0" parentLevel="_topmodule.roster"/></Keyword></Definition><Definition name="crr_is_closed_last"><Remark role="planner"><P>True if no more legs will be added to the end of the trip. Used for avoiding illegal subchain problems.</P><P>Source: data/internal</P><P/><P>   Comment: Warning: should be avoided or at least  used with utmost care when modelling for Colgen</P><P>   </P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.roster"/><Range level="_topmodule.roster" backward="0" forward="0" parentLevel="_topmodule.roster"/></Keyword></Definition><Definition name="aircraft_change"><Remark role="planner"><P>True if the next leg in the chain does not follow the current leg in any aircraft rotation (including over night changes) - void if multiple vehicles</P><P>Source: derived</P><P/><P>   Comment: Can be defined using the ac_rotations_ref transform</P><P>   </P><P/></Remark><Keyword type="Bool" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="1" parentLevel="_topmodule.roster"/></Keyword></Definition><Definition name="shift_improve_tw_start"><Remark role="planner"><P>Start of  improve time window</P><P>Source: technical</P><P/><P>   Comment: Optimizer specific - not used in Studio</P><P>   </P><P/></Remark><Keyword type="Abstime" voidy="false"><Dependency level="_topmodule.roster"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="shift_improve_tw_end"><Remark role="planner"><P>End of  improve time window</P><P>Source: technical</P><P/><P>   Comment: Optimizer specific - not used in Studio</P><P>   </P><P/></Remark><Keyword type="Abstime" voidy="false"><Dependency level="_topmodule.roster"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="apc_cas_is_active"><Remark role="planner"><P>TRUE when APC is running a crew assignment job.</P><P>Source: technical</P><P/><P>   Comment: Has no meaning in Studio</P><P>   </P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="apc_pac_is_active"><Remark role="planner"><P>TRUE when APC is running a pairing job.</P><P>Source: technical</P><P/><P>   Comment: Has no meaning in Studio</P><P>   </P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="assigned_crew_position"><Remark role="planner"><P>Argument: Int position</P><P>Assigned crew position for this crew chain</P><P>Source: derived</P><P/><P>   Comment: Different behaviour in all products. See details in Configuration Manual</P><P>   </P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword><Argument name="position" type="Int"/></Definition><Definition name="booked_crew_position"><Remark role="planner"><P>Argument: Int position</P><P>Booked crew in the given position of the leg</P><P>Source: derived</P><P/><P>   Comment: Can be expressed with an equal_legs transform expression. See also Carmen System Configuration for more information.</P><P>   </P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword><Argument name="position" type="Int"/></Definition><Definition name="planning_crew_position"><Remark role="planner"><P>Argument: Int position</P><P>Planning value of crew in subplan</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword><Argument name="position" type="Int"/></Definition><Definition name="assigned_crew_position_1"><Remark role="planner"><P>Assigned crew position 1 for this crew chain</P><P>Source: derived</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_2"><Remark role="planner"><P>Assigned crew position 2 for this crew chain</P><P>Source: derived</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_3"><Remark role="planner"><P>Assigned crew position 3 for this crew chain</P><P>Source: derived</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_4"><Remark role="planner"><P>Assigned crew position 4 for this crew chain</P><P>Source: derived</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_5"><Remark role="planner"><P>Assigned crew position 5 for this crew chain</P><P>Source: derived</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_6"><Remark role="planner"><P>Assigned crew position 6 for this crew chain</P><P>Source: derived</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_7"><Remark role="planner"><P>Assigned crew position 7 for this crew chain</P><P>Source: derived</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_8"><Remark role="planner"><P>Assigned crew position 8 for this crew chain</P><P>Source: derived</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_9"><Remark role="planner"><P>Assigned crew position 9 for this crew chain</P><P>Source: derived</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_10"><Remark role="planner"><P>Assigned crew position 10 for this crew chain</P><P>Source: derived</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_11"><Remark role="planner"><P>Assigned crew position 11 for this crew chain</P><P>Source: derived</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_crew_position_12"><Remark role="planner"><P>Assigned crew position 12 for this crew chain</P><P>Source: derived</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_1"><Remark role="planner"><P>Booked crew in position 1 of the leg</P><P>Source: derived</P><P/><P>   Comment: Can be expressed with an equal_legs transform expression. See also Carmen System Configuration for more information.</P><P>   </P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_2"><Remark role="planner"><P>Booked crew in position 2 of the leg</P><P>Source: derived</P><P/><P>   Comment: Can be expressed with an equal_legs transform expression. See also Carmen System Configuration for more information.</P><P>   </P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="passenger_terminal_departure_station"><Remark role="planner"><P>Passenger terminal for departure station (max 2 letters)</P><P>Source: data/SSIM</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="flight_number"><Remark role="planner"><P>IATA standard flight number</P><P>Source: data/iSSIM</P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="aircraft_type"><Remark role="planner"><P>IATA aircraft sub-type (3 characters)</P><P>Source: data/SSIM</P><P/></Remark><Keyword type="String" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_3"><Remark role="planner"><P>Booked crew in position 3 of the leg</P><P>Source: derived</P><P/><P>   Comment: Can be expressed with an equal_legs transform expression. See also Carmen System Configuration for more information.</P><P>   </P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_4"><Remark role="planner"><P>Booked crew in position 4 of the leg</P><P>Source: derived</P><P/><P>   Comment: Can be expressed with an equal_legs transform expression. See also Carmen System Configuration for more information.</P><P>   </P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_5"><Remark role="planner"><P>Booked crew in position 5 of the leg</P><P>Source: derived</P><P/><P>   Comment: Can be expressed with an equal_legs transform expression. See also Carmen System Configuration for more information.</P><P>   </P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_6"><Remark role="planner"><P>Booked crew in position 6 of the leg</P><P>Source: derived</P><P/><P>   Comment: Can be expressed with an equal_legs transform expression. See also Carmen System Configuration for more information.</P><P>   </P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_7"><Remark role="planner"><P>Booked crew in position 7 of the leg</P><P>Source: derived</P><P/><P>   Comment: Can be expressed with an equal_legs transform expression. See also Carmen System Configuration for more information.</P><P>   </P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_8"><Remark role="planner"><P>Booked crew in position 8 of the leg</P><P>Source: derived</P><P/><P>   Comment: Can be expressed with an equal_legs transform expression. See also Carmen System Configuration for more information.</P><P>   </P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_9"><Remark role="planner"><P>Booked crew in position 9 of the leg</P><P>Source: derived</P><P/><P>   Comment: Can be expressed with an equal_legs transform expression. See also Carmen System Configuration for more information.</P><P>   </P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_10"><Remark role="planner"><P>Booked crew in position 10 of the leg</P><P>Source: derived</P><P/><P>   Comment: Can be expressed with an equal_legs transform expression. See also Carmen System Configuration for more information.</P><P>   </P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_11"><Remark role="planner"><P>Booked crew in position 11 of the leg</P><P>Source: derived</P><P/><P>   Comment: Can be expressed with an equal_legs transform expression. See also Carmen System Configuration for more information.</P><P>   </P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="booked_crew_position_12"><Remark role="planner"><P>Booked crew in position 12 of the leg</P><P>Source: derived</P><P/><P>   Comment: Can be expressed with an equal_legs transform expression. See also Carmen System Configuration for more information.</P><P>   </P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="planning_crew_position_1"><Remark role="planner"><P>Planning value of crew in subplan</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_2"><Remark role="planner"><P>Planning value of crew in subplan</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_3"><Remark role="planner"><P>Planning value of crew in subplan</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_4"><Remark role="planner"><P>Planning value of crew in subplan</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_5"><Remark role="planner"><P>Planning value of crew in subplan</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_6"><Remark role="planner"><P>Planning value of crew in subplan</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_7"><Remark role="planner"><P>Planning value of crew in subplan</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_8"><Remark role="planner"><P>Planning value of crew in subplan</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_9"><Remark role="planner"><P>Planning value of crew in subplan</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_10"><Remark role="planner"><P>Planning value of crew in subplan</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_11"><Remark role="planner"><P>Planning value of crew in subplan</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="planning_crew_position_12"><Remark role="planner"><P>Planning value of crew in subplan</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="empty_context"><Remark role="planner"><P>Empty context</P><P/></Remark><Context/></Definition><Definition name="default_context"><Remark role="planner"><P>The original context, typically everything in the window.</P><P/><P>   Comment: APC: everything in the sub-plan. Studio: The active/selected object(s); window content, selected chain, the complete sub-plan.</P><P>   </P><P/></Remark><Context/></Definition><Definition name="sp_crew_context"><Remark role="planner"><P>Synonym for sp_crew</P><P/></Remark><Context/></Definition><Definition name="sp_crew"><Remark role="planner"><P>All assignments in the sub plan.</P><P/></Remark><Context/></Definition><Definition name="sp_crrs_context"><Remark role="planner"><P>Synonym for sp_crrs</P><P/></Remark><Context/></Definition><Definition name="sp_crrs"><Remark role="planner"><P>All trips in the sub plan.</P><P/></Remark><Context/></Definition><Definition name="sp_crew_chains_context"><Remark role="planner"><P>Synonym for sp_crew_chains.</P><P/></Remark><Context/></Definition><Definition name="sp_crew_chains"><Remark role="planner"><P>All crew chains (assignments, trips and duties) in the sub plan.</P><P/></Remark><Context/></Definition><Definition name="plan_1_crew_first_activity"><Remark role="planner"><P>The corresponding crew in reference plan 1 (Tracking only). The result belongs to the plan_1_sp_crew context.</P><P>Returned context: plan_1_sp_crew</P><P/><P>      Comment: Not supported in APC.</P><P>    </P><P/></Remark><Transform><Dependency level="_topmodule.roster"/></Transform></Definition><Definition name="times"><Remark role="planner"><P>The iteration will be repeated N times. The active count is available with the function times_index(K) where K is in the range [0 - number of times iterations used].</P></Remark><Iterator/></Definition><Definition name="above"><Remark role="planner"><P>Returns the iteration group N steps above the current group.</P></Remark><Iterator/></Definition><Definition name="actual_chain_period"><Remark role="planner"><P>Creates iteration groups representing periods in which chains depart on days with uniform frequency. The day frequency is uniform if the pattern of days is repeated over a 7 day rolling week. Each day can contain one or more legs/chains. The departure of a chain is calculated with the departure keyword on the first leg in the chain.</P></Remark><Iterator/></Definition><Definition name="actual_leg_period"><Remark role="planner"><P>Creates iteration groups representing periods in which legs depart on days with uniform frequency. The day frequency is uniform if the pattern of days is repeated over a 7 day rolling week. Each day can contain one or more legs. The departure of a leg is calculated with the departure keyword.</P></Remark><Iterator/></Definition><Definition name="environment_activity"><Remark role="planner"><P>True if the activity is part of the environment</P><P>Source: data/internal</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="preassigned_activity"><Remark role="planner"><P>True if the activity is preassigned, i.e. locked to crew member or part of the environment</P><P>Source: data/internal</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="assigned_function"><Remark role="planner"><P>Returns the position for the assigned function. Range is 0 to 11. Returns -1 for unassigned legs</P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="aircraft_owner"><Remark role="planner"><P>The IATA airline designator for the carrier to whose fleet the aircraft belongs</P><P>Source: data/SSIM</P><P/></Remark><Keyword type="String" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="personal_activity"><Remark role="planner"><P>True if the leg is a personal activity</P><P>Source: data/internal</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="nothing_scheduled"><Remark role="planner"><P>True if crew member does not have any assignments (i.e. a dummy crew chain)</P><P>Source: derived</P><P/></Remark><Keyword type="Bool" voidy="true"><Dependency level="_topmodule.roster"/><Range level="_topmodule.roster" backward="0" forward="0" parentLevel="_topmodule.roster"/></Keyword></Definition><Definition name="crr_has_base_variant"><Remark role="planner"><P>True if the trip has a base variant. In PAC APC this keyword may only be used in the PDL status report code. In CAS APC the keyword is undefined.</P><P>Source: data/internal</P><P/></Remark><Keyword type="Bool" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="locked_activity"><Remark role="planner"><P>True if the activity is locked during  improve in APC</P><P>Source: data/internal</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="ground_duty_main_code"><Remark role="planner"><P>AF. Returns the duty main code if the activity is a ground duty. Otherwise VOID is returned</P><P>Source: data/iSSIM</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="ground_duty_sub_code"><Remark role="planner"><P>Returns the sub code for a ground task code if the activity is a ground duty. Otherwise VOID is returned</P><P>Source: data/internal</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="crr_name"><Remark role="planner"><P>Name of this trip</P><P>Source: data/user defined</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="crr_name_as_integer"><Remark role="planner"><P>Name of this trip as an integer</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="is_generating"><Remark role="planner"><P>True only when generating.</P><P>Source: technical</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="bid_group"><Remark role="planner"><P>Return the active bidgroup or 0 if not used.</P><P>Source: technical</P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="connection_matrix_setup"><Remark role="planner"><P>True only when evaluating RAVE expressions on connection.</P><P>Source: technical</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="onward_ref_flight_number"><Remark role="planner"><P>Flight number of the next leg operated by the same aircraft regarding to onward references from input data</P><P>Source: data/SSIM</P><P/></Remark><Keyword type="Int" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="changed_assignment"><Remark role="planner"><P>False if segment belonged to the previous solution for a crew member</P><P>Source: data/internal</P><P/><P>   Comment: Optimizer specific</P><P>   </P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="changed_assignment_valid"><Remark role="planner"><P>If true then the keyword changed_assignment is valid.</P><P>Source: data/internal</P><P/><P>   Comment: Optimizer specific</P><P>   </P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.roster"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="apc_cas_shift_improve_loop"><Remark role="planner"><P>returns shift_improve_loop when cas_shift_improve is running.</P><P>Source: technical</P><P/><P>   Comment: Has no meaning in Studio</P><P>   </P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="shift_improve_sweep_number"><Remark role="planner"><P>Number of shift improve sweep currently being executed.</P><P>Source: technical</P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="shift_improve_solution_number"><Remark role="planner"><P>Number of shift improve solution currently being created.</P><P>Source: technical</P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="trip_homebase"><Remark role="planner"><P>Planned homebase for current trip (preferable to homebase in Crew Assignment)</P><P>Source: data/internal</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_0"><Remark role="planner"><P>True if {user} tag 0 is set</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_1"><Remark role="planner"><P>True if {user} tag 1 is set</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_2"><Remark role="planner"><P>True if {user} tag 2 is set</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_3"><Remark role="planner"><P>True if {user} tag 3 is set</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_4"><Remark role="planner"><P>True if {user} tag 4 is set</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_5"><Remark role="planner"><P>True if {user} tag 5 is set</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_6"><Remark role="planner"><P>True if {user} tag 6 is set</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_7"><Remark role="planner"><P>True if {user} tag 7 is set</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="user_tag_8"><Remark role="planner"><P>True if {user} tag 8 is set</P><P>Source: data/user defined</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="departure_airport_city"><Remark role="planner"><P>Three-letter city code of departure city</P><P>Source: data/AirportFile</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="departure_longitude"><Remark role="planner"><P>Longitude of departure airport in minutes (positive=E)</P><P>Source: data/AirportFile</P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="departure_latitude"><Remark role="planner"><P>Latitude of departure airport in minutes (positive=N)</P><P>Source: data/AirportFile</P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="departure_time_zone"><Remark role="planner"><P>Difference between local time and UTC at departure airport (daylight saving time not considered)</P><P>Source: derived</P><P/></Remark><Keyword type="Reltime" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival_airport_name"><Remark role="planner"><P>IATA code of arrival airport (3 letters)</P><P>Source: data/SSIM+AirportFile</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival_airport_base"><Remark role="planner"><P>Base of arrival airport. If arrival airport is not at an active base according to the base definition table an empty string is returned</P><P>Source: derived</P><P/></Remark><Keyword type="String" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival_airport_city"><Remark role="planner"><P>Three-letter city code of arrival city</P><P>Source: data/SSIM+AirportFile</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival_longitude"><Remark role="planner"><P>Longitude of arrival airport in minutes (positive=E)</P><P>Source: data/SSIM+AirportFile</P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival_latitude"><Remark role="planner"><P>Latitude of arrival airport in minutes (positive=N)</P><P>Source: data/SSIM+AirportFile</P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival_time_zone"><Remark role="planner"><P>Difference between local time and UTC at arrival airport (daylight saving time not considered)</P><P>Source: data/SSIM+AirportFile</P><P/></Remark><Keyword type="Reltime" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="homebase"><Remark role="planner"><P>Planned homebase for current chain of legs (should not be used in crew assignment)</P><P>Source: derived</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.roster"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="homebase_country"><Remark role="planner"><P>Planned homebase country code (two letters)</P><P>Source: derived</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.roster"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="local_arrival_time_summer"><Remark role="planner"><P>Arrival time LT at arrival airport (adjustment is made for daylight saving time)</P><P>Source: derived</P><P/></Remark><Keyword type="Abstime" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="local_departure_time_summer"><Remark role="planner"><P>Departure time LT at departure airport (adjustment is made for daylight saving time)</P><P>Source: derived</P><P/></Remark><Keyword type="Abstime" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="homebase_arrival_summer"><Remark role="planner"><P>Arrival time in local homebase time (daylight saving time considered)</P><P>Source: derived</P><P/></Remark><Keyword type="Abstime" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="homebase_departure_summer"><Remark role="planner"><P>Departure time in local homebase time (daylight saving time considered)</P><P>Source: derived</P><P/></Remark><Keyword type="Abstime" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="local_departure_time"><Remark role="planner"><P>Departure time LT at departure airport (daylight saving time not considered)</P><P>Source: derived</P><P/></Remark><Keyword type="Abstime" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="local_arrival_time"><Remark role="planner"><P>Arrival time LT at arrival airport (daylight saving time not considered)</P><P>Source: derived</P><P/></Remark><Keyword type="Abstime" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="homebase_departure"><Remark role="planner"><P>Departure time in local homebase time (NO daylight saving time)</P><P>Source: derived</P><P/></Remark><Keyword type="Abstime" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="homebase_arrival"><Remark role="planner"><P>Arrival time in local homebase time (NO daylight saving time)</P><P>Source: derived</P><P/></Remark><Keyword type="Abstime" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="crr_crew_id"><Remark role="planner"><P>Crew id for assigned trip</P><P>Source: derived</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.roster"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="line_name"><Remark role="planner"><P>Name of this Line</P><P>Source: data/user defined</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/></Keyword></Definition><Definition name="trip_id"><Remark role="planner"><P>Uniq trip id</P><P>Source: derived, data/internal</P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="ground_duty_code_suffix"><Remark role="planner"><P>Returns the one letter suffix of a ground task code. If the activity is not a ground duty VOID is returned</P><P>Source: data/iSSIM</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="flight_suffix"><Remark role="planner"><P>The operational suffix for the flight (1 letter). The meaning and use of the suffix is defined by the administrating carrier. VOID is returned for non flight duties</P><P>Source: data/iSSIM</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="flight_carrier"><Remark role="planner"><P>IATA airline designator of the administrating carrier. VOID is returned for non flight duties.</P><P>Source: data/iSSIM</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="departure_airport_country"><Remark role="planner"><P>IATA code of departure country (2 letters)</P><P>Source: data/AirportFile</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival_airport_country"><Remark role="planner"><P>IATA code of arrival country (2 letters)</P><P>Source: data/SSIM+AirportFile</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="departure_airport_state"><Remark role="planner"><P>Two-letter state code of arrival airport</P><P>Source: data/AirportFile</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival_airport_state"><Remark role="planner"><P>Two-letter state code of arrival airport</P><P>Source: data/SSIM+AirportFile</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="ground_duty_code"><Remark role="planner"><P>Returns the duty code if the activity is a ground duty. Otherwise VOID is returned</P><P>Source: data/iSSIM</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="off_duty_code"><Remark role="planner"><P>Returns the off duty code if the activity is an off duty. Otherwise VOID is returned</P><P>Source: data/internal</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="off_duty_sub_code"><Remark role="planner"><P>Returns the off duty sub code if the activity is an off duty. Otherwise VOID is returned</P><P>Source: data/internal</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="leg_number"><Remark role="planner"><P>The leg sequence number</P><P>Source: data/SSIM</P><P/></Remark><Keyword type="Int" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="ground_duty"><Remark role="planner"><P>True for all ground activities and personal on duties</P><P>Source: data/internal</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="off_duty"><Remark role="planner"><P>True for all personal off duties</P><P>Source: data/internal</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="flight_duty"><Remark role="planner"><P>True if the activity is a flight duty</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="ground_activity"><Remark role="planner"><P>True if the leg is a ground activity</P><P>Source: data/internal</P><P/></Remark><Keyword type="Bool" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="arrival"><Remark role="planner"><P>Arrival time UTC</P><P>Source: data/SSIM</P><P/></Remark><Keyword type="Abstime" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="departure"><Remark role="planner"><P>Departure time UTC</P><P>Source: data/SSIM</P><P/></Remark><Keyword type="Abstime" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="lp_period_start"><Remark role="planner"><P>Validity period for local plan (i.e. period for loaded flight data). Start date.</P><P>Source: data/internal</P><P/></Remark><Keyword type="Abstime" voidy="true"><Dependency level="_topmodule.roster"/><Range level="_topmodule.roster" backward="0" forward="0" parentLevel="_topmodule.roster"/></Keyword></Definition><Definition name="lp_period_end"><Remark role="planner"><P>Validity period for local plan. End date.</P><P>Source: data/internal</P><P/></Remark><Keyword type="Abstime" voidy="true"><Dependency level="_topmodule.roster"/><Range level="_topmodule.roster" backward="0" forward="0" parentLevel="_topmodule.roster"/></Keyword></Definition><Definition name="departure_airport_name"><Remark role="planner"><P>IATA code of departure airport (3 letters)</P><P>Source: data/AirportFile</P><P/></Remark><Keyword type="String" voidy="true"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition><Definition name="departure_airport_base"><Remark role="planner"><P>Base of departure airport. If departure airport is not at an active base according to the base definition table an empty string is returned</P><P>Source: derived</P><P/></Remark><Keyword type="String" voidy="false"><Dependency level="_topmodule.leg"/><Range level="_topmodule.leg" backward="0" forward="0" parentLevel="_topmodule.leg"/></Keyword></Definition></Module><Module name="matador"><Definition name="%________crew_rostering_optimizer_parameters____%"><Position file="modules/matador" row="16"/><Remark role="brief"><P>#HEADER#CREW ROSTERING OPTIMIZER parameters</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="________"/></Variable></Definition><Definition name="%unassigned_crew_cost_default%"><Position file="modules/matador" row="24"/><Remark role="planner"><P>The cost for a crew member with no assignments.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="1000"/></Variable></Definition><Definition name="%map_crew_assigned_position%"><Position file="modules/matador" row="28"/><Remark role="planner"><P>The name of the Rave variable that determines which position in a trip a crew member should be assigned to. The variable is evaluated for all combinations of trips and crew members.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="crew_assigned_position"/></Variable></Definition><Definition name="%___roster_initial_parameters___%"><Position file="modules/matador" row="34"/><Remark role="brief"><P>#HEADER# ROSTER INITIAL parameters</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="________"/></Variable></Definition><Definition name="%roster_initial_algorithm%"><Position file="modules/matador" row="42"/><Remark role="planner"><P>Controls which algorithm the Roster Initial method uses. For a detailed description of the different algorithms, see the Crew Rostering Optimizer Reference Manual.</P><P> 1 = exhaustive matcher.</P><P> 2 = lazy matcher assign.</P><P> 3 = simple matcher assign.</P><P> 4 = sequential matcher assign.</P><P> 5 = best trip initial.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="1"/></Variable></Definition><Definition name="%map_roster_initial_cost%"><Position file="modules/matador" row="46"/><Remark role="planner"><P>The name of the Rave variable used by the Roster Initial method to calculate the cost of assigning a trip to a roster. If the parameter is not defined, the method uses the variable map_cost_of_roster instead.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue=""/></Variable></Definition><Definition name="%roster_initial_max_connection_time%"><Position file="modules/matador" row="50"/><Remark role="planner"><P>The maximum connection time allowed for assignments made by the exhaustive matcher assign algorithm in the Roster Initial method. Decreasing the parameter increases the speed of the method, but may affect the solution quality.</P></Remark><Variable type="Reltime" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="1200:00"/></Variable></Definition><Definition name="%___shift_improve_parameters___%"><Position file="modules/matador" row="56"/><Remark role="brief"><P>#HEADER# SHIFT IMPROVE parameters</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="________"/></Variable></Definition><Definition name="%use_shift_improve_method%"><Position file="modules/matador" row="60"/><Remark role="planner"><P>If the parameter is TRUE, the Crew Rostering Optimizer applies the Shift Improve method. The method tries to improve an existing solution by first deassigning all trips within a time window, and then generating new rosters from all currently unassigned trips. To improve the whole solution the method shifts the time window along the planning period a number of times.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="FALSE"/></Variable></Definition><Definition name="%shift_improve_number_of_sweeps%"><Position file="modules/matador" row="64"/><Remark role="planner"><P>The number of times the Shift Improve method moves the time window over the entire planning period.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="3"/></Variable></Definition><Definition name="%shift_improve_time_window_touch%"><Position file="modules/matador" row="68"/><Remark role="planner"><P>Controls which trips that are included in the time window. If the parameter is FALSE, only trips that are fully contained in the time window are included. Otherwise, all trips touching the time window are included.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="FALSE"/></Variable></Definition><Definition name="%shift_improve_time_window_length%"><Position file="modules/matador" row="72"/><Remark role="planner"><P>The length, in hours, of the time window used in the Shift Improve method.</P></Remark><Variable type="Reltime" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="168:00"/></Variable></Definition><Definition name="%shift_improve_time_window_step_size%"><Position file="modules/matador" row="76"/><Remark role="planner"><P>The size, in hours, of the step used in the Shift Improve method to move the time window each iteration.</P></Remark><Variable type="Reltime" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="48:00"/></Variable></Definition><Definition name="%shift_improve_only_assign_in_time_window%"><Position file="modules/matador" row="80"/><Remark role="planner"><P>If the parameter is TRUE, the Shift Improve method only assigns trips included in the time window, i.e. it does not consider unassigned trips outside the time window.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="FALSE"/></Variable></Definition><Definition name="%map_shift_improve_generator%"><Position file="modules/matador" row="84"/><Remark role="planner"><P>The name of a Rave variable that evaluates which generator to use in shift improve. 0 is DFS (default), 1 is generating using Shortest Path. The varible can be crew dependent.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue=""/></Variable></Definition><Definition name="%___generation_parameters___%"><Position file="modules/matador" row="90"/><Remark role="brief"><P>#HEADER# GENERATION parameters</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="________"/></Variable></Definition><Definition name="%generator_search_wop_gap%"><Position file="modules/matador" row="94"/><Remark role="planner"><P>Defines the number of whole days that constitute the working period (wop) for a connection. If the connection time is greater than the value of the parameter, the connection is a next wop connection. Otherwise, it is a same wop connection.</P><P>The working period is used together with the search width parameters in the generation step of the Shift Improve method:</P><P>  - generator_search_same_wop_connections</P><P>  - generator_search_next_wop_connections.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="2"/></Variable></Definition><Definition name="%generator_search_same_wop_connections%"><Position file="modules/matador" row="98"/><Remark role="planner"><P>The search width for same working period connections. The search width is the number of alternative continuations considered by the Shift Improve method in the generation step. A smaller search width gives less rosters. The working period (wop) for a connection is defined by the parameter generator_search_wop_gap.</P><P>The parameter is given as a string and can contain up to three integers, x y z. The integer x is the search width for the first assignment, y for the second, and z for all subsequent assignments.</P><P>See also generator_search_next_wop_connections.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="10"/></Variable></Definition><Definition name="%generator_search_next_wop_connections%"><Position file="modules/matador" row="102"/><Remark role="planner"><P>The search width for next working period connections.</P><P>For more information, see generator_search_same_wop_connections.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="10"/></Variable></Definition><Definition name="%dfs_generator_search_follow_solution%"><Position file="modules/matador" row="106"/><Remark role="planner"><P>If the parameter is TRUE, the Shift Improve method includes trips from the previous solution in the generation step.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="TRUE"/></Variable></Definition><Definition name="%use_random_dfs_method%"><Position file="modules/matador" row="110"/><Remark role="planner"><P>If the parameter is TRUE, the Shift Improve method uses randomized roster generation. This feature uses a probabilistic algorithm to include trips with a higher generation cost in the generation step.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="FALSE"/></Variable></Definition><Definition name="%use_cost_generation%"><Position file="modules/matador" row="114"/><Remark role="planner"><P>If the parameter is TRUE, the trips in the generation step of the Shift Improve method are sorted in ascending order according to the value returned by the Rave variable from map_generation_cost. Otherwise, the default sorting criteria is by departure time. Using this feature slows down the generation step considerably, and is only recommended if a good sorting criteria can be identified. See also use_precalculated_cost_generation.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="FALSE"/></Variable></Definition><Definition name="%map_generation_cost%"><Position file="modules/matador" row="118"/><Remark role="planner"><P>The name of a Rave variable that returns a value for assigning a trip in the generation step of the Shift Improve method. The variable is calculated for all trips that can be assigned to the generated roster. It is evaluated on the crew member, and a chain consisting of the previous trip in the roster (if any) and the new trip. The calculation is only done if use_cost_generation is TRUE.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="apc_generation_cost"/></Variable></Definition><Definition name="%use_precalculated_cost_generation%"><Position file="modules/matador" row="122"/><Remark role="planner"><P>The same as use_cost_generation, but to save time the value given by the variable in map_generation_cost is calculated in advance. The variable is evaluated for each combination of crew members and trips, where a trip is given as a single trip roster. The parameter is only active if use_cost_generation is TRUE.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="FALSE"/></Variable></Definition><Definition name="%use_max_new_trips%"><Position file="modules/matador" row="126"/><Remark role="planner"><P>If the parameter is TRUE, the Shift Improve method uses an internal rule that limits the number of new trips available to a crew member in the generation step. New trips are trips that were not present in the crew member&#x92;s roster in the previous iteration, and the allowed number of new trips is given by max_new_trips. The rule is fast and is evaluated before any legality is checked.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="FALSE"/></Variable></Definition><Definition name="%max_new_trips%"><Position file="modules/matador" row="130"/><Remark role="planner"><P>A limit on the number of new trips available to a crew member in the generation step of the Shift Improve method. The number is used by a rule that is evaluated if use_max_new_trips is TRUE. Typical values are:</P><P>  1 = Limits the generation very much, commonly used in the beginning of a run.</P><P>  2 = Commonly used value.</P><P>  3 = Three or more new trips generally does not reduce the generation much.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="99"/></Variable></Definition><Definition name="%target_generated_rosters_per_crew%"><Position file="modules/matador" row="134"/><Remark role="planner"><P>The average number of rosters that should be generated per crew member in the generation step of the Shift Improve method. The fair share feature aims at this target, and tries to reach it by controlling the search width.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="50"/></Variable></Definition><Definition name="%map_target_generated_rosters_per_crew%"><Position file="modules/matador" row="138"/><Remark role="planner"><P>The name of a Rave variable returning the average number of rosters that should be generated for a crew member in the generation step of the Shift Improve method. If this parameter is defined, it overrides target_generated_rosters_per_crew.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue=""/></Variable></Definition><Definition name="%day_offset%"><Position file="modules/matador" row="142"/><Remark role="planner"><P>The time of day when a working day starts. Working day periods have an important use in the generation step of the Shift Improve method.</P></Remark><Variable type="Reltime" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="5:30"/></Variable></Definition><Definition name="%use_index_group_generation%"><Position file="modules/matador" row="146"/><Remark role="planner"><P>If the parameter is TRUE, the Shift Improve method applies index group generation. This feature randomly divides crew and trips each in a number of groups given by index_groups, and then associates each group of crew with a group of trips. During the generation step, an assignment of a trip to a crew member in the associated group is rewarded with the value of index_credit. The groups are recalculated each Shift Improve time window.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="FALSE"/></Variable></Definition><Definition name="%index_groups%"><Position file="modules/matador" row="150"/><Remark role="planner"><P>The number of groups used in the index group generation.</P><P>See use_index_group_generation.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="3"/></Variable></Definition><Definition name="%index_credit%"><Position file="modules/matador" row="154"/><Remark role="planner"><P>The reward used in the index group generation. When applied, the reward reduces the connection time, which affects the sorting of the connections.</P><P>See use_index_group_generation.</P></Remark><Variable type="Reltime" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="9000:00"/></Variable></Definition><Definition name="%extensive_search_probability%"><Position file="modules/matador" row="158"/><Remark role="planner"><P>The percentage of the crew where the Shift Improve method uses extensive search in the generation step. The extensive search is controlled by the parameter extensive_search_percentage.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="0"/></Variable></Definition><Definition name="%extensive_search_percentage%"><Position file="modules/matador" row="162"/><Remark role="planner"><P>The percentage of the original value that the Shift Improve method should use for the parameters:</P><P>  - max_new_trips</P><P>  - target_generated_rosters_per_crew</P><P>  - generator_search_same_wop_connections</P><P>  - generator_search_next_wop_connections</P><P> when performing an extensive search in the generation step.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="200"/></Variable></Definition><Definition name="%___advanced_parameters___%"><Position file="modules/matador" row="168"/><Remark role="brief"><P>#HEADER# ADVANCED parameters</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="________"/></Variable></Definition><Definition name="%use_max_roster_generation%"><Position file="modules/matador" row="176"/><Remark role="planner"><P>If the parameter is TRUE, the Crew Rostering Optimizer applies the Max Roster method. This method generates and stores the best possible roster for each crew member, without considering any other crew. The result is an artificial roster that is used by the Carmen Preferential Bidding System.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="FALSE"/></Variable></Definition><Definition name="%use_connection_matrix%"><Position file="modules/matador" row="180"/><Remark role="planner"><P>If the parameter is TRUE, the Crew Rostering Optimizer connection matrix is set up and used in the solution methods. See the section Connection Matrix in the Crew Rostering Optimizer Reference manual for further information on this feature.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="FALSE"/></Variable></Definition><Definition name="%set_up_impossible_trip_tag%"><Position file="modules/matador" row="184"/><Remark role="planner"><P>If the parameter is TRUE, the Crew Rostering Optimizer activates the impossible trip tag feature. This is a crew dependent filter that blocks trips not assignable to the crew member. Which combinations that are impossible are defined by map_impossible_trip.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="FALSE"/></Variable></Definition><Definition name="%map_impossible_trip%"><Position file="modules/matador" row="188"/><Remark role="planner"><P>The name of a Rave variable that determines whether a trip can be assigned to a crew member. The variable should return TRUE/FALSE, and is evaluated on a roster containing only the crew member, the pre-assignments and the trip. If the parameter is not defined the usual legality test is performed.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue=""/></Variable></Definition><Definition name="%use_script_file%"><Position file="modules/matador" row="192"/><Remark role="planner"><P>If the parameter is TRUE, the Crew Rostering Optimizer evaluates the script given by script_file_name. Selection of solution methods and other settings done by the script override any parameter settings.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="FALSE"/></Variable></Definition><Definition name="%script_file_name%"><Position file="modules/matador" row="196"/><Remark role="planner"><P>The name of the script file to be evaluated by the Crew Rostering Optimizer if use_script_file is TRUE. A file ending in .py implies a Python script, otherwise the file is considered to be an CSL script.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue=""/></Variable></Definition><Definition name="%optimizer_time_limit%"><Position file="modules/matador" row="200"/><Remark role="planner"><P>The time limit in minutes for the external optimizer. If the time limit is reached, the Crew Rostering Optimizer returns the current solution, if any, or regards the problem as infeasible. The default value 0 means unlimited time, but 10 would be a better setting in almost all cases, except for very large and difficult problems.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="0"/></Variable></Definition><Definition name="%sp_optimizer_time_limit_seconds%"><Position file="modules/matador" row="204"/><Remark role="planner"><P>The time limit in seconds for the optimizer in the strict seniority shortest path solver.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="20"/></Variable></Definition><Definition name="%permit_violation_of_hard_qualifications_on_locked_input%"><Position file="modules/matador" row="208"/><Remark role="planner"><P>If the parameter is TRUE, the Crew Rostering Optimizer is allowed to violate hard leg and trip qualifications in locked input.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="TRUE"/></Variable></Definition><Definition name="%trip_is_locked_probability%"><Position file="modules/matador" row="212"/><Remark role="planner"><P>The probability in percent for a trip to be locked during an iteration of the Shift Improve method. If the parameter is non-zero, a corresponding percentage of randomly selected trips are locked in each iteration, which limits the generation step.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="0"/></Variable></Definition><Definition name="%map_trip_is_locked_probability%"><Position file="modules/matador" row="216"/><Remark role="planner"><P>The name of a Rave variable returning the probability in percent for a trip to be locked during an iteration of the Shift Improve method. If defined, this variable overrides the parameter trip_is_locked_probability.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue=""/></Variable></Definition><Definition name="%crew_is_locked_probability%"><Position file="modules/matador" row="220"/><Remark role="planner"><P>The probability in percent for a crew member to be locked during an iteration of the Shift Improve method. If the parameter is non-zero, a corresponding percentage of randomly selected crew members are locked in each iteration, which limits the generation step.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="0"/></Variable></Definition><Definition name="%map_crew_is_locked_probability%"><Position file="modules/matador" row="224"/><Remark role="planner"><P>The name of a Rave variable returning the probability in percent for a crew member to be locked during an iteration of the Shift Improve method. If defined, this variable overrides the parameter crew_is_locked_probability.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue=""/></Variable></Definition><Definition name="%use_pdl_status%"><Position file="modules/matador" row="228"/><Remark role="planner"><P>If the parameter is TRUE, the Crew Rostering Optimizer uses the status report defined in the file given by the parameter status_pdl_file.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="FALSE"/></Variable></Definition><Definition name="%status_pdl_file%"><Position file="modules/matador" row="232"/><Remark role="planner"><P>The location of the file defining the status report to be used if use_pdl_status is TRUE.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="crr_window_general/apc_status.output"/></Variable></Definition><Definition name="%ip_solver%"><Position file="modules/matador" row="236"/><Remark role="planner"><P>Controls the choice of the available external optimizers. Possible values are:</P><P>0 - Use the default optimizer, defined by the resource default.config.AvailableIPSolvers.</P><P>1 - Use Xpress if available, otherwise use the default optimizer and issue a warning.</P><P>2 - Use CPLEX if available, otherwise use the default optimizer and issues a warning.</P><P>If any other positive value is set, a warning will be issued and the default optimizer will be used.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="0"/></Variable></Definition><Definition name="%map_roster_is_complete%"><Position file="modules/matador" row="240"/><Remark role="planner"><P>The name of a Rave variable returning TRUE if a roster is complete.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue=""/></Variable></Definition><Definition name="%map_seniority%"><Position file="modules/matador" row="244"/><Remark role="planner"><P>The name of a Rave variable giving a unique seniority rank for a crew member. A lower number means higher seniority.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue=""/></Variable></Definition><Definition name="%map_bid_points%"><Position file="modules/matador" row="248"/><Remark role="planner"><P>The name of a Rave variable calculating the strict seniority bid points for a trip or a roster.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue=""/></Variable></Definition><Definition name="%map_max_bidgroups%"><Position file="modules/matador" row="252"/><Remark role="planner"><P>The name of a Rave variable for strict seniority crew dependent number of bid groups.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue=""/></Variable></Definition><Definition name="%map_awarded_bidgroup%"><Position file="modules/matador" row="256"/><Remark role="planner"><P>The name of a Rave variable for the bidgroup of a roster.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue=""/></Variable></Definition><Definition name="%___fly_below_rank____%"><Position file="modules/matador" row="262"/><Remark role="brief"><P>#HEADER#Fly Below Rank</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="________"/></Variable></Definition><Definition name="%use_fly_below_rank%"><Position file="modules/matador" row="266"/><Remark role="planner"><P>If the parameter is TRUE, the Crew Rostering Optimizer uses the fly below rank feature, which allows crew members to be assigned to several alternative crew positions in the same trip.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="FALSE"/></Variable></Definition><Definition name="%number_of_fbr_positions%"><Position file="modules/matador" row="270"/><Remark role="planner"><P>The number of alternative positions, in addition to the position given by map_crew_assigned_position, where a crew member can be assigned if the fly below rank feature is activated. Only the values 1 to 3 are possible, and the corresponding positions are given by the parameters map_crew_assigned_xxx_position.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="1"/></Variable></Definition><Definition name="%assign_below_rank_probability%"><Position file="modules/matador" row="274"/><Remark role="planner"><P>The probability in percent of the Crew Rostering Optimizer trying to assign a crew member in an alternative position if the fly below rank feature is activated.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="10"/></Variable></Definition><Definition name="%map_assign_below_rank_probability%"><Position file="modules/matador" row="278"/><Remark role="planner"><P>The name of a Rave variable that gives the probability in percent of the Crew Rostering Optimizer trying to assign a crew member in an alternative position, if the fly below rank feature is activated. If the variable is defined, it is evaluated on individual crew members and overrides the parameter assign_below_rank_probability.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue=""/></Variable></Definition><Definition name="%map_crew_assigned_2nd_position%"><Position file="modules/matador" row="282"/><Remark role="planner"><P>The name of a Rave variable returning the 2nd alternative position a crew member can be assigned to in a trip, if the fly below rank feature is activated. If a 2nd position not is applicable for a crew member and a trip, the variable should return the value -1.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="fbr_2nd_position"/></Variable></Definition><Definition name="%map_crew_assigned_3rd_position%"><Position file="modules/matador" row="286"/><Remark role="planner"><P>The name of a Rave variable returning the 3rd position a crew member can be assigned to in a trip, if the fly below rank feature is activated and the parameter number_of_fbr_positions is larger than 1. If a 3rd position not is applicable for a crew member and a trip, the variable should return the value -1.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue=""/></Variable></Definition><Definition name="%map_crew_assigned_4th_position%"><Position file="modules/matador" row="290"/><Remark role="planner"><P>The name of a Rave variable returning the 4th position a crew member can be assigned to in a trip, if the fly below rank feature is activated and the parameter number_of_fbr_positions is 3. If a 4th position not is applicable for a crew member and a trip, the variable should return the value -1.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue=""/></Variable></Definition><Definition name="%map_cost_of_roster%"><Position file="require/rd_matador" row="3"/><Remark role="planner"><P>The name of the Rave variable calculating the cost of a roster. This variable is also used to calculate the cost of unassigned trips.</P></Remark><Variable type="String" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="matador_cost_of_roster"/></Variable></Definition><Definition name="%free_crew_position%"><Position file="require/rd_matador" row="4"/><Remark role="planner"><P>Defines the given crew position as a free crew position. A free crew position has no crew complement, and can be assigned any number of crew members by the Crew Rostering Optimizer. A position defined as a free crew position should also be defined as a training position to avoid overbooked trips.</P></Remark><Variable type="Int" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="6"/></Variable></Definition><Definition name="%use_roster_initial_method%"><Position file="require/rd_matador" row="5"/><Remark role="planner"><P>If the parameter is TRUE, the Crew Rostering Optimizer applies the Roster Initial method. The method is used to quickly find an initial solution to the rostering problem, and is often followed by the Shift Improve method.</P></Remark><Variable type="Bool" voidy="false"><Dependency level="_builtin.const"/><Range level="_builtin.const" backward="-1" forward="-1" parentLevel="_builtin.const"/><Parameter defaultValue="TRUE"/></Variable></Definition></Module></RaveProgram>
