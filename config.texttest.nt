# Path to the executable
executable:${TEXTTEST_CHECKOUT}/Scripts/texttestc.py

# Uncomment this to test the installed version.
# Note that 8 or so tests rely on monkey-patching Python and hence won't work with this setup
#executable:${TEXTTEST_CHECKOUT}/texttestc.exe

# don't run the SGE/LSF/ec2cloud tests for now : they don't work on Windows...
# don't run the tests that receive signals either
extra_version:{CLEAR intcore}
extra_version:{CLEAR signals}
extra_version:{CLEAR sge}
extra_version:{CLEAR sge.signals}
extra_version:{CLEAR sge.gui}
extra_version:{CLEAR lsf}
extra_version:{CLEAR lsf.signals}
extra_version:{CLEAR lsf.gui}
extra_version:{CLEAR ec2cloud}

[run_dependent_text]
# Save us having to maintain a separate .nt GUI log which is updated too often for this to be convenient
gui_log:&lt;default browser&gt;{REPLACE firefox}
pythonmocks:send_signal(15){REPLACE send_signal(12)}
pythonmocks:(under [A-Za-z]*)\\\\{REPLACE \1/}
pythonmocks:<-PYT:import urllib.parse
targetReport:(under [A-Za-z]*)\\{REPLACE \1/}
overview*:texttestc.(py|exe){REPLACE texttest}
overview*:texttest.exe{REPLACE texttest}
dynamic_gui_log:([^ ]*)/Scripts/texttestc.py{REPLACE \1/bin/texttest}
output:\\\\{REPLACE /}
output:\\{REPLACE /}
output:Das System kann die angegebene Datei nicht finden{REPLACE The system cannot find the file specified}
output:C:/Program Files.*/TextTest/Meld.exe{REPLACE /usr/bin/tkdiff}
output:C:/Program Files.*/Notepad++/notepad++.exe{REPLACE notepad}
errors:\\\\{REPLACE /}
errors:\\{REPLACE /}
overview*:\\{REPLACE /}
pythonmocks:\\\\{REPLACE /}
pythonmocks:import matplotlib
pythonmocks:<-PYT:locale.getpreferredencoding(do_setlocale=False){REPLACE <-PYT:locale.getpreferredencoding()}
pythonmocks:'C:/Program Files.*/TextTest/texttest.*.exe'{REPLACE <path_to_texttest>}
externalmocks:\\{REPLACE /}
checkforbugs:\\{REPLACE /}
reconnection:\\\\{REPLACE /}
reconnection:\\{REPLACE /}
remoteScript*:\\{REPLACE /}
remoteScript*:(exec python .*)'(.*)'{REPLACE \1\2}
submitfile_*:\\{REPLACE /}